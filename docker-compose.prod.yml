version: '3.7'

services:
    # サービス名は自由に設定        
    web:
        # コンテナ名を明示的に指定
        container_name: web
        image: steveltn/https-portal:1
        ports:
            - 80:80
            - 443:443
        volumes:
            - ../web_ssl_certs:/var/lib/https-portal
            - static_volume:/usr/share/nginx/html/static
            - media_volume:/usr/share/nginx/html/media
            - ../nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - nyapu
        environment:
            #DOMAINS: 'nyapumap.com -> http://nyapu:8000'
            #STAGE: 'production'
            #FORCE_RENEW: ‘true’
            DOMAINS: 'localhost -> http://nyapu:8000'
            STAGE: 'local'
            CLIENT_MAX_BODY_SIZE: 10M


    nyapu:
        # コンテナ名を明示的に指定
        container_name: nyapu
        build: 
        # 読み込むファイル名が`Dockerfile`ではない場合contextに相対パス、dockerfileにファイル名を記載
            context: ./
            dockerfile: Dockerfile.prod   
        # サービス起動後に入力されるコマンドを設定
        command: gunicorn --bind 0.0.0.0:8000 --chdir nyapu nyapu_pj.wsgi:application 
        #検証時のみ8000ポート開放
        ports:
            - 8000:8000
        # データを永続化させる場合の設定。`host:container`でパスを記載
        volumes:
            - ./:/usr/src/app
            - static_volume:/usr/share/nginx/html/static
            - media_volume:/usr/share/nginx/html/media
        # 環境変数を指定
        env_file: ../.env
        # 接続するサービスを指定
        depends_on:
            - postgres
          

    postgres:
        # コンテナ名を明示的に指定
        container_name: postgres
        # 公式からイメージをpull
        image: postgres:10.17-alpine
        # データベースの永続化
        volumes:
            - postgres_data:/var/lib/postgresql/data
        env_file: ../.env.db


# トップレベルに書く「名前付きvolumes」は複数サービスから参照できる
volumes:
    postgres_data: 
    static_volume:
    media_volume: