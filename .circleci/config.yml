# circleCIのバージョン指定
version: 2.1
jobs:
  # Djangoのテストを実行
  build:
    working_directory: ~/nyapu_project
    machine: 
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run:
          name: make env file
          command: |
            echo SECRET_KEY=${SECRET_KEY} >> ./.env
            echo DATABASE_ENGINE=${DATABASE_ENGINE} >> ./.env
            echo DATABASE_DB=${DATABASE_DB} >> ./.env
            echo DATABASE_USER=${DATABASE_USER} >> ./.env
            echo DATABASE_PASSWORD=${DATABASE_PASSWORD} >> ./.env
            echo DATABASE_HOST=${DATABASE_HOST} >> ./.env
            echo DATABASE_PROT=${DATABASE_PORT} >> ./.env

            echo POSTGRES_USER=${POSTGRES_USER} >> ./.env.db
            echo POSTGRES_PASSWORD=${POSTGRES_PASSWORD} >> ./.env.db
            echo POSTGRES_DB=${POSTGRES_DB} >> ./.env.db
      - run:
          name: Install Docker Compose
          command: |
            curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: docker-compose up
          command: docker-compose up -d --build
      - run:
          name: sleep for launch db to migrate at Django
          command: sleep 30
      - run:
          name: test
          command: docker-compose exec nyapu python /usr/src/app/nyapu/manage.py test diary accounts
      - run:
          name: docker-compose down
          command: docker-compose down

  # EC2にSSH接続し、デプロイを実行する
  deploy:
    steps:
      - checkout
      # CircleCIに登録した秘密鍵を呼び出す。
      - add_ssh_keys:
      - run: 
          name: deploy 
          command: |
            ssh ${USER_NAME}@${HOST_NAME} '
              rm -rf ~/app
              mkdir ~/app
              cd ~/app
              git pull
              cd ~/app/nyapu
              pip install --upgrade pip
              pipenv install
              pipenv shell
              python ~/app/nyapu/nyapu/manage.py migrate
              python ~/app/nyapu/nyapu/manage.py collectstatic --noinput
              sudo systemctl reload nginx.service
              cd ~/app/nyapu/nyapu
              pkill gunicorn
              gunicorn --bind 127.0.0.1:8000 nyapu_pj.wsgi -D
              ps -aux | grep gunicorn
            '

# テストが成功した場合のみ、deployを実行。
workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # masterブランチがpushされた場合のみdeployするようにする。
          #filters:
          #  branches:
          #    only: master
